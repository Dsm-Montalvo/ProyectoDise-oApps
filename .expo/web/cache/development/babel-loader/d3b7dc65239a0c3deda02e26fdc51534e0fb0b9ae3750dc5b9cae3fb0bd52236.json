{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useEffect, useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    user = _useState2[0],\n    setUser = _useState2[1];\n  useEffect(function () {\n    var fetchUsers = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          var response = require(\"./src/components/UserList/user.json\");\n          console.log(response);\n          setUser(response);\n        } catch (error) {}\n      });\n      return function fetchUsers() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchUsers();\n  }, []);\n  return _jsx(NavigationContainer, {\n    children: _jsx(Stack.navigation, {})\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FFF',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\n{}","map":{"version":3,"names":["useEffect","useState","NavigationContainer","jsx","_jsx","App","_useState","_useState2","_slicedToArray","user","setUser","fetchUsers","_ref","_asyncToGenerator","response","require","console","log","error","apply","arguments","children","Stack","navigation","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"sources":["C:/5 cuatri/Desarrollo Movil Multiplataforma/proyecto1/App.tsx"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, SafeAreaView } from 'react-native';\nimport ClassComponent from './src/components/ClassComponent';\nimport LoginScreen from './src/screen/Login/LoginScreen';\nimport UserList from './src/components/UserList/UserList';\nimport { useEffect,useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\n\n export type RootSatckParamList = {\n  loginScreen : undefined\n };\n\nexport default function App() {\n  const [user, setUser]= useState([]);\n\n  useEffect(()=> {\n\n    const fetchUsers = async () =>{\n      try{\n        const response = require('./src/components/UserList/user.json');\n        console.log(response);\n        setUser(response);\n\n      }catch(error){\n\n      }\n    };\n    fetchUsers();\n  },[]);\n\n  return (\n\n    <NavigationContainer>\n    <Stack.navigation>\n      \n    </Stack.navigation>\n  </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FFF',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\n{/*<View style={styles.container}>\n      <Text>Open up App.tsx to start working on your app!</Text>\n      <StatusBar style=\"auto\" /> \n      <FunctionalComponent ap_pat=\"Montalvo\" name=\"Daniel\" />   \n      <ClassComponent age={24} name=\"montalvo\" />   \n      <LoginScreen />   \n\n      \n    </View>*/}"],"mappings":";;;AAKA,SAASA,SAAS,EAACC,QAAQ,QAAQ,OAAO;AAC1C,SAASC,mBAAmB,QAAQ,0BAA0B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAM/D,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAAuBL,QAAQ,CAAC,EAAE,CAAC;IAAAM,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA5BG,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EAEpBP,SAAS,CAAC,YAAK;IAEb,IAAMW,UAAU;MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAW;QAC5B,IAAG;UACD,IAAMC,QAAQ,GAAGC,OAAO,sCAAsC,CAAC;UAC/DC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;UACrBJ,OAAO,CAACI,QAAQ,CAAC;QAEnB,CAAC,QAAMI,KAAK,EAAC,CAEb;MACF,CAAC;MAAA,gBATKP,UAAUA,CAAA;QAAA,OAAAC,IAAA,CAAAO,KAAA,OAAAC,SAAA;MAAA;IAAA,GASf;IACDT,UAAU,CAAC,CAAC;EACd,CAAC,EAAC,EAAE,CAAC;EAEL,OAEEP,IAAA,CAACF,mBAAmB;IAAAmB,QAAA,EACpBjB,IAAA,CAACkB,KAAK,CAACC,UAAU,IAEC;EAAC,CACA,CAAC;AAExB;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAM,CAAC;EAC/BC,SAAS,EAAE;IACTC,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,CAQa"},"metadata":{},"sourceType":"module","externalDependencies":[]}