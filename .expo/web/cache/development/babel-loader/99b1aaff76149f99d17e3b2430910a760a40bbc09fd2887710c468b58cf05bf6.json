{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { styles } from \"./LoginScreenStyles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var handleLogin = function handleLogin() {\n    console.log('informacion :', {\n      username: username,\n      password: password\n    });\n  };\n  var handleRegister = function handleRegister() {\n    console.log('register');\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.titulo,\n      children: \"Login\"\n    }), _jsx(Text, {\n      style: styles.label,\n      children: \"Email\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: setUsername,\n      value: username,\n      placeholder: \"ingresa email\"\n    }), _jsx(Text, {\n      style: styles.label,\n      children: \"Password\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: setPassword,\n      value: password,\n      secureTextEntry: true,\n      placeholder: \"ingresa password\"\n    }), _jsx(Button, {\n      title: \"Login\",\n      onPress: handleLogin\n    }), _jsx(Button, {\n      title: \"Register\",\n      onPress: handleRegister\n    })]\n  });\n};\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","Button","styles","jsx","_jsx","jsxs","_jsxs","LoginScreen","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","handleLogin","console","log","handleRegister","style","container","children","titulo","label","input","onChangeText","value","placeholder","secureTextEntry","title","onPress"],"sources":["C:/5 cuatri/Desarrollo Movil Multiplataforma/proyecto1/src/screen/Login/LoginScreen.tsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport { View, Text, TextInput, Button,StyleSheet } from 'react-native';\r\nimport { styles } from './LoginScreenStyles';\r\n\r\n/*  FC= FunctionComponent\r\n    FCE=FunctionComponentElement\r\n    FCF=FunctionComponentFactory\r\n*/\r\nconst LoginScreen: React.FC = () =>{\r\n    const [username, setUsername] = useState('');\r\n    /* useState: el estado en que va a inicializar */\r\n    const [password, setPassword] = useState('');\r\n\r\n    const handleLogin = () =>{\r\n        console.log('informacion :', {username, password});\r\n    } \r\n\r\n    const handleRegister = () => {\r\n      \r\n        console.log('register');\r\n    }\r\n\r\n    return(\r\n        <View style={styles.container}>\r\n            <Text style={styles.titulo}>Login</Text>\r\n            <Text style={styles.label}>Email</Text>\r\n            <TextInput\r\n                style={styles.input}\r\n                onChangeText={setUsername}  \r\n                value={username}\r\n                placeholder='ingresa email' />\r\n            <Text style={styles.label}>Password</Text>\r\n            <TextInput \r\n                style={styles.input}\r\n                onChangeText={setPassword}\r\n                value={password}\r\n                secureTextEntry={true}\r\n                placeholder='ingresa password'\r\n            />\r\n\r\n            <Button title='Login' onPress={handleLogin}/>\r\n            \r\n            <Button title='Register' onPress={handleRegister} />\r\n        </View>\r\n    );\r\n\r\n}\r\n\r\nexport default LoginScreen;\r\n\r\n\r\n\r\n  /* \r\n  Terminos a investigar\r\n  camelCase  kebab-case snake_case PascalCase\r\n  \r\n  helper\r\n  */"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAEtC,SAASC,MAAM;AAA8B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAM7C,IAAMC,WAAqB,GAAG,SAAxBA,WAAqBA,CAAA,EAAQ;EAC/B,IAAAC,SAAA,GAAgCX,QAAQ,CAAC,EAAE,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAE5B,IAAAI,UAAA,GAAgChB,QAAQ,CAAC,EAAE,CAAC;IAAAiB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAE5B,IAAMG,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAQ;IACrBC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE;MAACR,QAAQ,EAARA,QAAQ;MAAEI,QAAQ,EAARA;IAAQ,CAAC,CAAC;EACtD,CAAC;EAED,IAAMK,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;IAEzBF,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;EAC3B,CAAC;EAED,OACIb,KAAA,CAACR,IAAI;IAACuB,KAAK,EAAEnB,MAAM,CAACoB,SAAU;IAAAC,QAAA,GAC1BnB,IAAA,CAACL,IAAI;MAACsB,KAAK,EAAEnB,MAAM,CAACsB,MAAO;MAAAD,QAAA,EAAC;IAAK,CAAM,CAAC,EACxCnB,IAAA,CAACL,IAAI;MAACsB,KAAK,EAAEnB,MAAM,CAACuB,KAAM;MAAAF,QAAA,EAAC;IAAK,CAAM,CAAC,EACvCnB,IAAA,CAACJ,SAAS;MACNqB,KAAK,EAAEnB,MAAM,CAACwB,KAAM;MACpBC,YAAY,EAAEf,WAAY;MAC1BgB,KAAK,EAAEjB,QAAS;MAChBkB,WAAW,EAAC;IAAe,CAAE,CAAC,EAClCzB,IAAA,CAACL,IAAI;MAACsB,KAAK,EAAEnB,MAAM,CAACuB,KAAM;MAAAF,QAAA,EAAC;IAAQ,CAAM,CAAC,EAC1CnB,IAAA,CAACJ,SAAS;MACNqB,KAAK,EAAEnB,MAAM,CAACwB,KAAM;MACpBC,YAAY,EAAEX,WAAY;MAC1BY,KAAK,EAAEb,QAAS;MAChBe,eAAe,EAAE,IAAK;MACtBD,WAAW,EAAC;IAAkB,CACjC,CAAC,EAEFzB,IAAA,CAACH,MAAM;MAAC8B,KAAK,EAAC,OAAO;MAACC,OAAO,EAAEf;IAAY,CAAC,CAAC,EAE7Cb,IAAA,CAACH,MAAM;MAAC8B,KAAK,EAAC,UAAU;MAACC,OAAO,EAAEZ;IAAe,CAAE,CAAC;EAAA,CAClD,CAAC;AAGf,CAAC;AAED,eAAeb,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}