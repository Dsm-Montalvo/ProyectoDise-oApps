{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var handleLogin = function handleLogin() {\n    console.log('informacion :', {\n      username: username,\n      password: password\n    });\n  };\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      style: styles.label,\n      children: \"Email\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: setUsername,\n      value: username,\n      placeholder: \"ingresa email\"\n    }), _jsx(Text, {\n      style: styles.label,\n      children: \"Password\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: setPassword,\n      value: password,\n      secureTextEntry: true,\n      placeholder: \"ingresa password\"\n    }), _jsx(Button, {\n      title: \"Login\",\n      onPress: handleLogin\n    })]\n  });\n};\nexport default LoginScreen;\nvar styles = StyleSheet.create({\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10\n  },\n  label: {\n    marginBottom: 5,\n    textAlign: center\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","TextInput","Button","StyleSheet","jsx","_jsx","jsxs","_jsxs","LoginScreen","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","handleLogin","console","log","children","style","styles","label","input","onChangeText","value","placeholder","secureTextEntry","title","onPress","create","height","margin","borderWidth","padding","marginBottom","textAlign","center"],"sources":["C:/5 cuatri/Desarrollo Movil Multiplataforma/proyecto1/src/screen/Login/LoginScreen.tsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport { View, Text, TextInput, Button,StyleSheet } from 'react-native';\r\n\r\n\r\n\r\nconst LoginScreen: React.FC = () =>{\r\n    const [username, setUsername] = useState('');\r\n    /* useState: el estado en que va a inicializar */\r\n    const [password, setPassword] = useState('');\r\n\r\n    const handleLogin = () =>{\r\n        console.log('informacion :', {username, password});\r\n    } \r\n    return(\r\n        <View>\r\n            <Text style={styles.label}>Email</Text>\r\n            <TextInput\r\n                style={styles.input}\r\n                onChangeText={setUsername}  \r\n                value={username}\r\n                placeholder='ingresa email' />\r\n            <Text style={styles.label}>Password</Text>\r\n            <TextInput \r\n                style={styles.input}\r\n                onChangeText={setPassword}\r\n                value={password}\r\n                secureTextEntry={true}\r\n                placeholder='ingresa password'\r\n            />\r\n\r\n            <Button title='Login' onPress={handleLogin}/>\r\n        </View>\r\n    );\r\n\r\n}\r\n\r\nexport default LoginScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    input: {\r\n      height: 40,\r\n      margin: 12,\r\n      borderWidth: 1,\r\n      padding: 10,\r\n    },\r\n    label:{\r\n        marginBottom:5,\r\n        textAlign: center,\r\n    }\r\n  });\r\n\r\n\r\n  /* \r\n  Terminos a investigar\r\n  camelCase  kebab-case snake_case PascalCase\r\n  \r\n  helper\r\n  */"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAKtC,IAAMC,WAAqB,GAAG,SAAxBA,WAAqBA,CAAA,EAAQ;EAC/B,IAAAC,SAAA,GAAgCX,QAAQ,CAAC,EAAE,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAE5B,IAAAI,UAAA,GAAgChB,QAAQ,CAAC,EAAE,CAAC;IAAAiB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAE5B,IAAMG,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAQ;IACrBC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE;MAACR,QAAQ,EAARA,QAAQ;MAAEI,QAAQ,EAARA;IAAQ,CAAC,CAAC;EACtD,CAAC;EACD,OACIT,KAAA,CAACR,IAAI;IAAAsB,QAAA,GACDhB,IAAA,CAACL,IAAI;MAACsB,KAAK,EAAEC,MAAM,CAACC,KAAM;MAAAH,QAAA,EAAC;IAAK,CAAM,CAAC,EACvChB,IAAA,CAACJ,SAAS;MACNqB,KAAK,EAAEC,MAAM,CAACE,KAAM;MACpBC,YAAY,EAAEb,WAAY;MAC1Bc,KAAK,EAAEf,QAAS;MAChBgB,WAAW,EAAC;IAAe,CAAE,CAAC,EAClCvB,IAAA,CAACL,IAAI;MAACsB,KAAK,EAAEC,MAAM,CAACC,KAAM;MAAAH,QAAA,EAAC;IAAQ,CAAM,CAAC,EAC1ChB,IAAA,CAACJ,SAAS;MACNqB,KAAK,EAAEC,MAAM,CAACE,KAAM;MACpBC,YAAY,EAAET,WAAY;MAC1BU,KAAK,EAAEX,QAAS;MAChBa,eAAe,EAAE,IAAK;MACtBD,WAAW,EAAC;IAAkB,CACjC,CAAC,EAEFvB,IAAA,CAACH,MAAM;MAAC4B,KAAK,EAAC,OAAO;MAACC,OAAO,EAAEb;IAAY,CAAC,CAAC;EAAA,CAC3C,CAAC;AAGf,CAAC;AAED,eAAeV,WAAW;AAE1B,IAAMe,MAAM,GAAGpB,UAAU,CAAC6B,MAAM,CAAC;EAC7BP,KAAK,EAAE;IACLQ,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE,CAAC;IACdC,OAAO,EAAE;EACX,CAAC;EACDZ,KAAK,EAAC;IACFa,YAAY,EAAC,CAAC;IACdC,SAAS,EAAEC;EACf;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}